{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brian Benchoff\\\\Documents\\\\GitHub\\\\ScriptSynthGUI\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport yaml from 'js-yaml';\nimport './App.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [testName, setTestName] = useState('');\n  const [samplingFrequency, setSamplingFrequency] = useState('');\n  const [metadata, setMetadata] = useState('');\n  const [outputOptions, setOutputOptions] = useState({\n    csv: false,\n    chronos: false,\n    influxdb: false\n  });\n  const [influxConfig, setInfluxConfig] = useState({\n    host: '',\n    port: '',\n    database: '',\n    bucket: '',\n    user: '',\n    password: ''\n  });\n  const [hardware, setHardware] = useState([]);\n  const [commands, setCommands] = useState([]);\n  const [yamlPreview, setYamlPreview] = useState('');\n  useEffect(() => {\n    generateYamlPreview();\n  }, [testName, samplingFrequency, metadata, outputOptions, influxConfig, hardware, commands]);\n  const handleAddHardware = type => {\n    const newHardware = {\n      type,\n      channels: {}\n    };\n    if (type === 'STRIDE') {\n      newHardware.host = '';\n      newHardware.units = '';\n      newHardware.input_type = '';\n    } else if (type === 'NIDAQ') {\n      newHardware.hw_type = ''; // Avoid conflict with 'type'\n      newHardware.interface = '';\n      newHardware.device = '';\n      newHardware.terminal_config = 'RSE';\n      newHardware.acquisition_type = 'FINITE';\n      newHardware.sampling_freq = '5000';\n      newHardware.buffer_size = '20000';\n      newHardware.cage_position = '';\n    } else if (type === 'SPANUARTClient') {\n      newHardware.module_type = '';\n      newHardware.module_position = '';\n      newHardware.port = '';\n      newHardware.baud = '115200';\n      newHardware.read_timeout_s = '0.25';\n      newHardware.version = '';\n      newHardware.cmd_delay_ms = '100';\n    } else if (type === 'ADAM') {\n      newHardware.hw_type = 'Data Acquisition Module';\n      newHardware.host = '';\n      newHardware.input_type = '';\n    }\n    setHardware([...hardware, newHardware]);\n  };\n  const handleDeleteHardware = index => {\n    const newHardware = hardware.filter((_, i) => i !== index);\n    setHardware(newHardware);\n  };\n  const handleAddChannel = index => {\n    const newHardware = [...hardware];\n    const channelCount = Object.keys(newHardware[index].channels).length;\n    newHardware[index].channels[`Channel ${channelCount}`] = '';\n    setHardware(newHardware);\n  };\n  const handleChangeHardware = (index, field, value) => {\n    const newHardware = [...hardware];\n    newHardware[index][field] = value;\n    setHardware(newHardware);\n  };\n  const handleChangeChannel = (hIndex, cIndex, value) => {\n    const newHardware = [...hardware];\n    newHardware[hIndex].channels[cIndex] = value;\n    setHardware(newHardware);\n  };\n  const handleAddCommand = () => {\n    setCommands([...commands, {\n      time: '',\n      port: '',\n      baud: '',\n      command: ''\n    }]);\n  };\n  const handleChangeCommand = (index, field, value) => {\n    const newCommands = [...commands];\n    newCommands[index][field] = value;\n    setCommands(newCommands);\n  };\n  const handleOutputOptionChange = option => {\n    setOutputOptions({\n      ...outputOptions,\n      [option]: !outputOptions[option]\n    });\n  };\n  const handleSaveYaml = async () => {\n    const output = {};\n    if (outputOptions.csv) output.CSV = {};\n    if (outputOptions.chronos) output.Chronos = {};\n    if (outputOptions.influxdb) {\n      output.InfluxDB = {\n        host: influxConfig.host,\n        port: influxConfig.port,\n        database: influxConfig.database,\n        bucket: influxConfig.bucket,\n        user: influxConfig.user,\n        password: influxConfig.password\n      };\n    }\n    const config = {\n      test_name: testName,\n      sampling_frequency: samplingFrequency,\n      metadata: metadata,\n      output: output,\n      hardware: hardware.map(hw => {\n        const {\n          type,\n          channels,\n          ...rest\n        } = hw;\n        return {\n          name: type,\n          channels,\n          ...rest\n        };\n      }),\n      commands: commands\n    };\n    try {\n      await axios.post('http://localhost:5000/generate-config', config);\n      const link = document.createElement('a');\n      link.href = 'http://localhost:5000/download-config';\n      link.setAttribute('download', 'config.yaml');\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (error) {\n      console.error('There was an error generating the config!', error);\n    }\n  };\n  const generateYamlPreview = () => {\n    const output = {};\n    if (outputOptions.csv) output.CSV = {};\n    if (outputOptions.chronos) output.Chronos = {};\n    if (outputOptions.influxdb) {\n      output.InfluxDB = {\n        host: influxConfig.host,\n        port: influxConfig.port,\n        database: influxConfig.database,\n        bucket: influxConfig.bucket,\n        user: influxConfig.user,\n        password: influxConfig.password\n      };\n    }\n    const config = {\n      test_name: testName,\n      sampling_frequency: samplingFrequency,\n      metadata: metadata,\n      output: output,\n      hardware: hardware.map(hw => {\n        const {\n          type,\n          channels,\n          ...rest\n        } = hw;\n        return {\n          name: type,\n          channels,\n          ...rest\n        };\n      }),\n      commands: commands\n    };\n    setYamlPreview(yaml.dump(config, {\n      indent: 2\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"ScriptSynth Configuration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Test Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: testName,\n          onChange: e => setTestName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 93\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Sampling Frequency (Hz):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: samplingFrequency,\n          onChange: e => setSamplingFrequency(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 111\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Metadata:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: metadata,\n          onChange: e => setMetadata(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 93\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: outputOptions.csv,\n            onChange: () => handleOutputOptionChange('csv')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), \"CSV\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: outputOptions.chronos,\n            onChange: () => handleOutputOptionChange('chronos')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), \"Chronos\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: outputOptions.influxdb,\n            onChange: () => handleOutputOptionChange('influxdb')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), \"InfluxDB\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 19\n        }, this), outputOptions.influxdb && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"InfluxDB Host:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: influxConfig.host,\n            onChange: e => setInfluxConfig({\n              ...influxConfig,\n              host: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 137\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"InfluxDB Port:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: influxConfig.port,\n            onChange: e => setInfluxConfig({\n              ...influxConfig,\n              port: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 137\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"InfluxDB Database:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: influxConfig.database,\n            onChange: e => setInfluxConfig({\n              ...influxConfig,\n              database: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 145\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"InfluxDB Bucket:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: influxConfig.bucket,\n            onChange: e => setInfluxConfig({\n              ...influxConfig,\n              bucket: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 141\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"InfluxDB User:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: influxConfig.user,\n            onChange: e => setInfluxConfig({\n              ...influxConfig,\n              user: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 137\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"InfluxDB Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: influxConfig.password,\n            onChange: e => setInfluxConfig({\n              ...influxConfig,\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 149\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hardware-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Hardware\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleAddHardware('STRIDE'),\n          children: \"Add STRIDE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleAddHardware('NIDAQ'),\n          children: \"Add NIDAQ\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleAddHardware('SPANUARTClient'),\n          children: \"Add SPANUARTClient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleAddHardware('ADAM'),\n          children: \"Add ADAM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), hardware.map((hw, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hardware-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [hw.type, \" Hardware \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleDeleteHardware(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), hw.type === 'STRIDE' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Host:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.host,\n              onChange: e => handleChangeHardware(index, 'host', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 124\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Units:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.units,\n              onChange: e => handleChangeHardware(index, 'units', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 126\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Input Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.input_type,\n              onChange: e => handleChangeHardware(index, 'input_type', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 136\n            }, this)]\n          }, void 0, true), hw.type === 'NIDAQ' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.hw_type,\n              onChange: e => handleChangeHardware(index, 'hw_type', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 130\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Interface:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.interface,\n              onChange: e => handleChangeHardware(index, 'interface', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 134\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Device:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.device,\n              onChange: e => handleChangeHardware(index, 'device', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 128\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Terminal Config:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.terminal_config,\n              onChange: e => handleChangeHardware(index, 'terminal_config', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 146\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Acquisition Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.acquisition_type,\n              onChange: e => handleChangeHardware(index, 'acquisition_type', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 148\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Sampling Frequency:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.sampling_freq,\n              onChange: e => handleChangeHardware(index, 'sampling_freq', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 142\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Buffer Size:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.buffer_size,\n              onChange: e => handleChangeHardware(index, 'buffer_size', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 138\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Cage Position:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.cage_position,\n              onChange: e => handleChangeHardware(index, 'cage_position', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 142\n            }, this)]\n          }, void 0, true), hw.type === 'SPANUARTClient' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Module Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.module_type,\n              onChange: e => handleChangeHardware(index, 'module_type', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 138\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Module Position:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.module_position,\n              onChange: e => handleChangeHardware(index, 'module_position', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 146\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Port:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.port,\n              onChange: e => handleChangeHardware(index, 'port', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 124\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Baud:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.baud,\n              onChange: e => handleChangeHardware(index, 'baud', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 124\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Read Timeout (s):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.read_timeout_s,\n              onChange: e => handleChangeHardware(index, 'read_timeout_s', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 144\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Version:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.version,\n              onChange: e => handleChangeHardware(index, 'version', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 130\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Command Delay (ms):\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.cmd_delay_ms,\n              onChange: e => handleChangeHardware(index, 'cmd_delay_ms', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 140\n            }, this)]\n          }, void 0, true), hw.type === 'ADAM' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.hw_type,\n              onChange: e => handleChangeHardware(index, 'hw_type', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 130\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Host:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.host,\n              onChange: e => handleChangeHardware(index, 'host', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 124\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Input Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.input_type,\n              onChange: e => handleChangeHardware(index, 'input_type', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 136\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Channels:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleAddChannel(index),\n            children: \"Add Channel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this), Object.keys(hw.channels).map((channel, cIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [channel, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: hw.channels[channel],\n              onChange: e => handleChangeChannel(index, channel, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 137\n            }, this)]\n          }, cIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 17\n          }, this))]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commands-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Commands\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleAddCommand,\n          children: \"Add Command\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), commands.map((cmd, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"command-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Time (hh:mm:ss):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: cmd.time,\n            onChange: e => handleChangeCommand(index, 'time', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 120\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Port:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: cmd.port,\n            onChange: e => handleChangeCommand(index, 'port', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 120\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Baud Rate:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: cmd.baud,\n            onChange: e => handleChangeCommand(index, 'baud', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 120\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Command:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: cmd.command,\n            onChange: e => handleChangeCommand(index, 'command', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 126\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSaveYaml,\n        children: \"Save YAML\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"YAML Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: yamlPreview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"11tuy2p5qy4InSuyodDt9CJ1F90=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","yaml","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","testName","setTestName","samplingFrequency","setSamplingFrequency","metadata","setMetadata","outputOptions","setOutputOptions","csv","chronos","influxdb","influxConfig","setInfluxConfig","host","port","database","bucket","user","password","hardware","setHardware","commands","setCommands","yamlPreview","setYamlPreview","generateYamlPreview","handleAddHardware","type","newHardware","channels","units","input_type","hw_type","interface","device","terminal_config","acquisition_type","sampling_freq","buffer_size","cage_position","module_type","module_position","baud","read_timeout_s","version","cmd_delay_ms","handleDeleteHardware","index","filter","_","i","handleAddChannel","channelCount","Object","keys","length","handleChangeHardware","field","value","handleChangeChannel","hIndex","cIndex","handleAddCommand","time","command","handleChangeCommand","newCommands","handleOutputOptionChange","option","handleSaveYaml","output","CSV","Chronos","InfluxDB","config","test_name","sampling_frequency","map","hw","rest","name","post","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","error","console","dump","indent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","checked","onClick","channel","cmd","_c","$RefreshReg$"],"sources":["C:/Users/Brian Benchoff/Documents/GitHub/ScriptSynthGUI/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport yaml from 'js-yaml';\r\nimport './App.css'; // Import the CSS file\r\n\r\nfunction App() {\r\n  const [testName, setTestName] = useState('');\r\n  const [samplingFrequency, setSamplingFrequency] = useState('');\r\n  const [metadata, setMetadata] = useState('');\r\n  const [outputOptions, setOutputOptions] = useState({\r\n    csv: false,\r\n    chronos: false,\r\n    influxdb: false,\r\n  });\r\n  const [influxConfig, setInfluxConfig] = useState({\r\n    host: '',\r\n    port: '',\r\n    database: '',\r\n    bucket: '',\r\n    user: '',\r\n    password: ''\r\n  });\r\n  const [hardware, setHardware] = useState([]);\r\n  const [commands, setCommands] = useState([]);\r\n  const [yamlPreview, setYamlPreview] = useState('');\r\n\r\n  useEffect(() => {\r\n    generateYamlPreview();\r\n  }, [testName, samplingFrequency, metadata, outputOptions, influxConfig, hardware, commands]);\r\n\r\n  const handleAddHardware = (type) => {\r\n    const newHardware = { type, channels: {} };\r\n    if (type === 'STRIDE') {\r\n      newHardware.host = '';\r\n      newHardware.units = '';\r\n      newHardware.input_type = '';\r\n    } else if (type === 'NIDAQ') {\r\n      newHardware.hw_type = ''; // Avoid conflict with 'type'\r\n      newHardware.interface = '';\r\n      newHardware.device = '';\r\n      newHardware.terminal_config = 'RSE';\r\n      newHardware.acquisition_type = 'FINITE';\r\n      newHardware.sampling_freq = '5000';\r\n      newHardware.buffer_size = '20000';\r\n      newHardware.cage_position = '';\r\n    } else if (type === 'SPANUARTClient') {\r\n      newHardware.module_type = '';\r\n      newHardware.module_position = '';\r\n      newHardware.port = '';\r\n      newHardware.baud = '115200';\r\n      newHardware.read_timeout_s = '0.25';\r\n      newHardware.version = '';\r\n      newHardware.cmd_delay_ms = '100';\r\n    } else if (type === 'ADAM') {\r\n      newHardware.hw_type = 'Data Acquisition Module';\r\n      newHardware.host = '';\r\n      newHardware.input_type = '';\r\n    }\r\n    setHardware([...hardware, newHardware]);\r\n  };\r\n\r\n  const handleDeleteHardware = (index) => {\r\n    const newHardware = hardware.filter((_, i) => i !== index);\r\n    setHardware(newHardware);\r\n  };\r\n\r\n  const handleAddChannel = (index) => {\r\n    const newHardware = [...hardware];\r\n    const channelCount = Object.keys(newHardware[index].channels).length;\r\n    newHardware[index].channels[`Channel ${channelCount}`] = '';\r\n    setHardware(newHardware);\r\n  };\r\n\r\n  const handleChangeHardware = (index, field, value) => {\r\n    const newHardware = [...hardware];\r\n    newHardware[index][field] = value;\r\n    setHardware(newHardware);\r\n  };\r\n\r\n  const handleChangeChannel = (hIndex, cIndex, value) => {\r\n    const newHardware = [...hardware];\r\n    newHardware[hIndex].channels[cIndex] = value;\r\n    setHardware(newHardware);\r\n  };\r\n\r\n  const handleAddCommand = () => {\r\n    setCommands([...commands, { time: '', port: '', baud: '', command: '' }]);\r\n  };\r\n\r\n  const handleChangeCommand = (index, field, value) => {\r\n    const newCommands = [...commands];\r\n    newCommands[index][field] = value;\r\n    setCommands(newCommands);\r\n  };\r\n\r\n  const handleOutputOptionChange = (option) => {\r\n    setOutputOptions({ ...outputOptions, [option]: !outputOptions[option] });\r\n  };\r\n\r\n  const handleSaveYaml = async () => {\r\n    const output = {};\r\n    if (outputOptions.csv) output.CSV = {};\r\n    if (outputOptions.chronos) output.Chronos = {};\r\n    if (outputOptions.influxdb) {\r\n      output.InfluxDB = {\r\n        host: influxConfig.host,\r\n        port: influxConfig.port,\r\n        database: influxConfig.database,\r\n        bucket: influxConfig.bucket,\r\n        user: influxConfig.user,\r\n        password: influxConfig.password,\r\n      };\r\n    }\r\n\r\n    const config = {\r\n      test_name: testName,\r\n      sampling_frequency: samplingFrequency,\r\n      metadata: metadata,\r\n      output: output,\r\n      hardware: hardware.map(hw => {\r\n        const { type, channels, ...rest } = hw;\r\n        return { name: type, channels, ...rest };\r\n      }),\r\n      commands: commands\r\n    };\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/generate-config', config);\r\n      const link = document.createElement('a');\r\n      link.href = 'http://localhost:5000/download-config';\r\n      link.setAttribute('download', 'config.yaml');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    } catch (error) {\r\n      console.error('There was an error generating the config!', error);\r\n    }\r\n  };\r\n\r\n  const generateYamlPreview = () => {\r\n    const output = {};\r\n    if (outputOptions.csv) output.CSV = {};\r\n    if (outputOptions.chronos) output.Chronos = {};\r\n    if (outputOptions.influxdb) {\r\n      output.InfluxDB = {\r\n        host: influxConfig.host,\r\n        port: influxConfig.port,\r\n        database: influxConfig.database,\r\n        bucket: influxConfig.bucket,\r\n        user: influxConfig.user,\r\n        password: influxConfig.password,\r\n      };\r\n    }\r\n\r\n    const config = {\r\n      test_name: testName,\r\n      sampling_frequency: samplingFrequency,\r\n      metadata: metadata,\r\n      output: output,\r\n      hardware: hardware.map(hw => {\r\n        const { type, channels, ...rest } = hw;\r\n        return { name: type, channels, ...rest };\r\n      }),\r\n      commands: commands\r\n    };\r\n\r\n    setYamlPreview(yaml.dump(config, { indent: 2 }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"left-panel\">\r\n        <h1>ScriptSynth Configuration</h1>\r\n        <div>\r\n          <label>Test Name:</label>\r\n          <input type=\"text\" value={testName} onChange={e => setTestName(e.target.value)} /><br />\r\n          <label>Sampling Frequency (Hz):</label>\r\n          <input type=\"text\" value={samplingFrequency} onChange={e => setSamplingFrequency(e.target.value)} /><br />\r\n          <label>Metadata:</label>\r\n          <input type=\"text\" value={metadata} onChange={e => setMetadata(e.target.value)} /><br />\r\n        </div>\r\n        <div>\r\n          <h2>Output</h2>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={outputOptions.csv}\r\n              onChange={() => handleOutputOptionChange('csv')}\r\n            />\r\n            CSV\r\n          </label><br />\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={outputOptions.chronos}\r\n              onChange={() => handleOutputOptionChange('chronos')}\r\n            />\r\n            Chronos\r\n          </label><br />\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={outputOptions.influxdb}\r\n              onChange={() => handleOutputOptionChange('influxdb')}\r\n            />\r\n            InfluxDB\r\n          </label><br />\r\n          {outputOptions.influxdb && (\r\n            <div>\r\n              <label>InfluxDB Host:</label>\r\n              <input type=\"text\" value={influxConfig.host} onChange={e => setInfluxConfig({ ...influxConfig, host: e.target.value })} /><br />\r\n              <label>InfluxDB Port:</label>\r\n              <input type=\"text\" value={influxConfig.port} onChange={e => setInfluxConfig({ ...influxConfig, port: e.target.value })} /><br />\r\n              <label>InfluxDB Database:</label>\r\n              <input type=\"text\" value={influxConfig.database} onChange={e => setInfluxConfig({ ...influxConfig, database: e.target.value })} /><br />\r\n              <label>InfluxDB Bucket:</label>\r\n              <input type=\"text\" value={influxConfig.bucket} onChange={e => setInfluxConfig({ ...influxConfig, bucket: e.target.value })} /><br />\r\n              <label>InfluxDB User:</label>\r\n              <input type=\"text\" value={influxConfig.user} onChange={e => setInfluxConfig({ ...influxConfig, user: e.target.value })} /><br />\r\n              <label>InfluxDB Password:</label>\r\n              <input type=\"password\" value={influxConfig.password} onChange={e => setInfluxConfig({ ...influxConfig, password: e.target.value })} /><br />\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"hardware-section\">\r\n          <h2>Hardware</h2>\r\n          <button type=\"button\" onClick={() => handleAddHardware('STRIDE')}>Add STRIDE</button>\r\n          <button type=\"button\" onClick={() => handleAddHardware('NIDAQ')}>Add NIDAQ</button>\r\n          <button type=\"button\" onClick={() => handleAddHardware('SPANUARTClient')}>Add SPANUARTClient</button>\r\n          <button type=\"button\" onClick={() => handleAddHardware('ADAM')}>Add ADAM</button>\r\n          {hardware.map((hw, index) => (\r\n            <div key={index} className=\"hardware-item\">\r\n              <h3>{hw.type} Hardware {index + 1}</h3>\r\n              <button type=\"button\" onClick={() => handleDeleteHardware(index)}>Delete</button>\r\n              {hw.type === 'STRIDE' && (\r\n                <>\r\n                  <label>Host:</label>\r\n                  <input type=\"text\" value={hw.host} onChange={e => handleChangeHardware(index, 'host', e.target.value)} /><br />\r\n                  <label>Units:</label>\r\n                  <input type=\"text\" value={hw.units} onChange={e => handleChangeHardware(index, 'units', e.target.value)} /><br />\r\n                  <label>Input Type:</label>\r\n                  <input type=\"text\" value={hw.input_type} onChange={e => handleChangeHardware(index, 'input_type', e.target.value)} /><br />\r\n                </>\r\n              )}\r\n              {hw.type === 'NIDAQ' && (\r\n                <>\r\n                  <label>Type:</label>\r\n                  <input type=\"text\" value={hw.hw_type} onChange={e => handleChangeHardware(index, 'hw_type', e.target.value)} /><br />\r\n                  <label>Interface:</label>\r\n                  <input type=\"text\" value={hw.interface} onChange={e => handleChangeHardware(index, 'interface', e.target.value)} /><br />\r\n                  <label>Device:</label>\r\n                  <input type=\"text\" value={hw.device} onChange={e => handleChangeHardware(index, 'device', e.target.value)} /><br />\r\n                  <label>Terminal Config:</label>\r\n                  <input type=\"text\" value={hw.terminal_config} onChange={e => handleChangeHardware(index, 'terminal_config', e.target.value)} /><br />\r\n                  <label>Acquisition Type:</label>\r\n                  <input type=\"text\" value={hw.acquisition_type} onChange={e => handleChangeHardware(index, 'acquisition_type', e.target.value)} /><br />\r\n                  <label>Sampling Frequency:</label>\r\n                  <input type=\"text\" value={hw.sampling_freq} onChange={e => handleChangeHardware(index, 'sampling_freq', e.target.value)} /><br />\r\n                  <label>Buffer Size:</label>\r\n                  <input type=\"text\" value={hw.buffer_size} onChange={e => handleChangeHardware(index, 'buffer_size', e.target.value)} /><br />\r\n                  <label>Cage Position:</label>\r\n                  <input type=\"text\" value={hw.cage_position} onChange={e => handleChangeHardware(index, 'cage_position', e.target.value)} /><br />\r\n                </>\r\n              )}\r\n              {hw.type === 'SPANUARTClient' && (\r\n                <>\r\n                  <label>Module Type:</label>\r\n                  <input type=\"text\" value={hw.module_type} onChange={e => handleChangeHardware(index, 'module_type', e.target.value)} /><br />\r\n                  <label>Module Position:</label>\r\n                  <input type=\"text\" value={hw.module_position} onChange={e => handleChangeHardware(index, 'module_position', e.target.value)} /><br />\r\n                  <label>Port:</label>\r\n                  <input type=\"text\" value={hw.port} onChange={e => handleChangeHardware(index, 'port', e.target.value)} /><br />\r\n                  <label>Baud:</label>\r\n                  <input type=\"text\" value={hw.baud} onChange={e => handleChangeHardware(index, 'baud', e.target.value)} /><br />\r\n                  <label>Read Timeout (s):</label>\r\n                  <input type=\"text\" value={hw.read_timeout_s} onChange={e => handleChangeHardware(index, 'read_timeout_s', e.target.value)} /><br />\r\n                  <label>Version:</label>\r\n                  <input type=\"text\" value={hw.version} onChange={e => handleChangeHardware(index, 'version', e.target.value)} /><br />\r\n                  <label>Command Delay (ms):</label>\r\n                  <input type=\"text\" value={hw.cmd_delay_ms} onChange={e => handleChangeHardware(index, 'cmd_delay_ms', e.target.value)} /><br />\r\n                </>\r\n              )}\r\n              {hw.type === 'ADAM' && (\r\n                <>\r\n                  <label>Type:</label>\r\n                  <input type=\"text\" value={hw.hw_type} onChange={e => handleChangeHardware(index, 'hw_type', e.target.value)} /><br />\r\n                  <label>Host:</label>\r\n                  <input type=\"text\" value={hw.host} onChange={e => handleChangeHardware(index, 'host', e.target.value)} /><br />\r\n                  <label>Input Type:</label>\r\n                  <input type=\"text\" value={hw.input_type} onChange={e => handleChangeHardware(index, 'input_type', e.target.value)} /><br />\r\n                </>\r\n              )}\r\n              <label>Channels:</label>\r\n              <button type=\"button\" onClick={() => handleAddChannel(index)}>Add Channel</button>\r\n              {Object.keys(hw.channels).map((channel, cIndex) => (\r\n                <div key={cIndex}>\r\n                  <label>{channel}:</label>\r\n                  <input type=\"text\" value={hw.channels[channel]} onChange={e => handleChangeChannel(index, channel, e.target.value)} /><br />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"commands-section\">\r\n          <h2>Commands</h2>\r\n          <button type=\"button\" onClick={handleAddCommand}>Add Command</button>\r\n          {commands.map((cmd, index) => (\r\n            <div key={index} className=\"command-item\">\r\n              <label>Time (hh:mm:ss):</label>\r\n              <input type=\"text\" value={cmd.time} onChange={e => handleChangeCommand(index, 'time', e.target.value)} /><br />\r\n              <label>Port:</label>\r\n              <input type=\"text\" value={cmd.port} onChange={e => handleChangeCommand(index, 'port', e.target.value)} /><br />\r\n              <label>Baud Rate:</label>\r\n              <input type=\"text\" value={cmd.baud} onChange={e => handleChangeCommand(index, 'baud', e.target.value)} /><br />\r\n              <label>Command:</label>\r\n              <input type=\"text\" value={cmd.command} onChange={e => handleChangeCommand(index, 'command', e.target.value)} /><br />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"right-panel\">\r\n        <button type=\"button\" onClick={handleSaveYaml}>Save YAML</button>\r\n        <h2>YAML Preview</h2>\r\n        <pre>{yamlPreview}</pre>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}